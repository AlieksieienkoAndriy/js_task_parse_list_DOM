{"version":3,"sources":["scripts/main.js"],"names":["employees","document","querySelector","sortList","list","employeesArr","children","forEach","employee","dataset","salary","slice","replace","sort","a","b","salaryArr","split","i","length","splice","join","append","getEmployees","map","name","innerText","position","age"],"mappings":";AAAA,aA6CA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA3CA,IAAMA,EAAYC,SAASC,cAAc,MAEzC,SAASC,EAASC,GACVC,IAAAA,EAAmBD,EAAAA,EAAKE,UAE9BD,EAAaE,QAAQ,SAACC,GACpBA,EAASC,QAAQC,OAASF,EAASC,QAAQC,OAAOC,MAAM,GAAGC,QAAQ,IAAK,MAG1EP,EAAaQ,KAAK,SAACC,EAAGC,GACbA,OAAAA,EAAEN,QAAQC,OAASI,EAAEL,QAAQC,SAGtCL,EAAaE,QAAQ,SAACC,GAGf,IAFCQ,IAAAA,GAAa,GAAKR,EAASC,QAAQC,QAAQO,MAAM,IAE9CC,EAAIF,EAAUG,OAAS,EAAGD,EAAI,EAAGA,GAAK,EAC7CF,EAAUI,OAAOF,EAAG,EAAG,KAGzBV,EAASC,QAAQC,OAAS,IAAMM,EAAUK,KAAK,MAG1BhB,IArBD,EAqBCA,EAAAA,EAAAA,GArBD,IAqBe,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAA1BG,IAAAA,EAA0B,EAAA,MACnCJ,EAAKkB,OAAOd,IAtBQ,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KA0BxB,SAASe,EAAanB,GAUbC,OATc,EAAID,EAAKE,UAAUkB,IAAI,SAAAhB,GACnC,MAAA,CACLiB,KAAMjB,EAASkB,UACfC,SAAUnB,EAASC,QAAQkB,SAC3BjB,OAAQF,EAASC,QAAQC,OACzBkB,IAAKpB,EAASC,QAAQmB,OAO5BzB,EAASH,GAETuB,EAAavB","file":"main.2150fc08.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst employees = document.querySelector('ul');\n\nfunction sortList(list) {\n  const employeesArr = [...list.children];\n\n  employeesArr.forEach((employee) => {\n    employee.dataset.salary = employee.dataset.salary.slice(1).replace(',', '');\n  });\n\n  employeesArr.sort((a, b) => {\n    return b.dataset.salary - a.dataset.salary;\n  });\n\n  employeesArr.forEach((employee) => {\n    const salaryArr = ('' + employee.dataset.salary).split('');\n\n    for (let i = salaryArr.length - 3; i > 0; i -= 3) {\n      salaryArr.splice(i, 0, ',');\n    }\n\n    employee.dataset.salary = '$' + salaryArr.join('');\n  });\n\n  for (const employee of employeesArr) {\n    list.append(employee);\n  }\n}\n\nfunction getEmployees(list) {\n  const employeesArr = [...list.children].map(employee => {\n    return {\n      name: employee.innerText,\n      position: employee.dataset.position,\n      salary: employee.dataset.salary,\n      age: employee.dataset.age,\n    };\n  });\n\n  return employeesArr;\n}\n\nsortList(employees);\n\ngetEmployees(employees);\n"]}